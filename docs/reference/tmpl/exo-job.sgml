<!-- ##### SECTION Title ##### -->
ExoJob

<!-- ##### SECTION Short_Description ##### -->
Base class for threaded/asynchronous jobs

<!-- ##### SECTION Long_Description ##### -->
<para>
<link linkend="ExoJob">ExoJob</link> is an abstract base class intended to wrap threaded/asynchronous
operations (called jobs here). It was written because the ways of dealing with threads provided by 
GLib were too low-level and not exactly object-oriented. 

It can be used to wrap any kind of long-running or possibly-blocking operation, like file operations
or communication with web services. The benefit of using <link linkend="ExoJob">ExoJob</link> is that
you get an object associated with an operation. After creating the job you can connect to signals like 
<link linkend="ExoJob::error">"error"</link> or 
<link linkend="ExoJob::percent">"percent"</link>. This design integrates very well in the
usual object-oriented design of applications based on GLib.
</para>

<!-- ##### SECTION See_Also ##### -->
<para>
<link linkend="ExoSimpleJob">ExoSimpleJob</link>
</para>

<!-- ##### SECTION Stability_Level ##### -->


<!-- ##### STRUCT ExoJob ##### -->
<para>

</para>


<!-- ##### SIGNAL ExoJob::error ##### -->
<para>

</para>

@exojob: the object which received the signal.
@arg1: 

<!-- ##### SIGNAL ExoJob::finished ##### -->
<para>

</para>

@exojob: the object which received the signal.

<!-- ##### SIGNAL ExoJob::info-message ##### -->
<para>

</para>

@exojob: the object which received the signal.
@arg1: 

<!-- ##### SIGNAL ExoJob::percent ##### -->
<para>

</para>

@exojob: the object which received the signal.
@arg1: 

<!-- ##### FUNCTION exo_job_launch ##### -->
<para>

</para>

@job: 
@Returns: 


<!-- ##### FUNCTION exo_job_cancel ##### -->
<para>

</para>

@job: 


<!-- ##### FUNCTION exo_job_is_cancelled ##### -->
<para>

</para>

@job: 
@Returns: 


<!-- ##### FUNCTION exo_job_get_cancellable ##### -->
<para>

</para>

@job: 
@Returns: 


<!-- ##### FUNCTION exo_job_set_error_if_cancelled ##### -->
<para>

</para>

@job: 
@error: 
@Returns: 


<!-- ##### FUNCTION exo_job_emit ##### -->
<para>

</para>

@job: 
@signal_id: 
@signal_detail: 
@Varargs: 


<!-- ##### FUNCTION exo_job_info_message ##### -->
<para>

</para>

@job: 
@format: 
@Varargs: 


<!-- ##### FUNCTION exo_job_percent ##### -->
<para>

</para>

@job: 
@percent: 


